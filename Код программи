# Клас Hotel представляє готель з іменем, рейтингом та списком кімнат
class Hotel:
    def __init__(self, name, rating, rooms):
        self.name = name
        self.rating = rating
        self.rooms = rooms

    # Функція available_rooms повертає список доступних кімнат у готелі
    def available_rooms(self):
        return [room for room in self.rooms if room.booked_days == 0]

    # Функція booked_rooms повертає список заброньованих кімнат у готелі
    def booked_rooms(self):
        return [room for room in self.rooms if room.booked_days > 0]

    # Функція book_room бронює кімнату з заданим номером на задану кількість днів, якщо вона є доступною
    def book_room(self, room_number, days):
        for room in self.rooms:
            if room.number == room_number:
                if room.booked_days == 0:
                    room.booked_days = days
                    return True
                else:
                    return False
        return False

    # Функція cancel_booking скасовує бронювання кімнати з заданим номером, якщо вона була заброньована раніше
    def cancel_booking(self, room_number):
        for room in self.rooms:
            if room.number == room_number:
                room.booked_days = 0
                return True
        return False

# Клас Room представляє кімнату у готелі з номером, ціною та кількістю спальних місць
class Room:
    def __init__(self, number, price, beds):
        self.number = number
        self.price = price
        self.beds = beds
        self.booked_days = 0

# Створюємо список готелів для прикладу
hotels = [
    Hotel("Готель 1", 4.5, [Room(101, 1000, 2), Room(102, 1200, 2), Room(103, 1500, 3)]),
    Hotel("Готель 2", 4.2, [Room(201, 800, 1), Room(202, 900, 2), Room(203, 1100, 3)]),
    Hotel("Готель 3", 3.9, [Room(301, 700, 1), Room(302, 850, 2), Room(303, 950, 4)])
]

# Функція list_hotels виводить список доступних готелів з буквами для вибору
def list_hotels():
    for i, hotel in enumerate(hotels):
        letter = chr(ord('A') + i)
        print(f"{letter}: {hotel.name} - Доступні кімнати: {len(hotel.available_rooms())} - Рейтинг: {hotel.rating}")

# Функція list_booked_rooms виводить список заброньованих кімнат у всіх готелях
def list_booked_rooms():
    for hotel in hotels:
        for room in hotel.booked_rooms():
            print(f"Готель: {hotel.name} - Номер кімнати: {room.number} - Заброньовано на {room.booked_days} днів")

# Функція list_rooms виводить список доступних кімнат у вибраному готелі
def list_rooms(hotel_letter):
    index = ord(hotel_letter) - ord('A')
    if index >= 0 and index < len(hotels):
        hotel = hotels[index]
        for room in hotel.available_rooms():
            print(f"Номер кімнати: {room.number} - Ціна: {room.price} - Спальних місць: {room.beds}")
        return True
    else:
        print(f"Готель з буквою {hotel_letter} не знайдено")
        return False

# Функція book_room бронює кімнату у вибраному готелі
def book_room(hotel_letter, room_number, days):
    index = ord(hotel_letter) - ord('A')
    if index >= 0 and index < len(hotels):
        hotel = hotels[index]
        if hotel.book_room(room_number, days):
            print(f"Кімната {room_number} у готелі {hotel.name} успішно заброньована на {days} днів")
            return
        else:
            print(f"Кімната {room_number} у готелі {hotel.name} недоступна для бронювання")
            return
    else:
        print(f"Готель з буквою {hotel_letter} не знайдено")

# Функція cancel_booking скасовує бронювання кімнати у вибраному готелі
def cancel_booking(hotel_letter, room_number):
    index = ord(hotel_letter) - ord('A')
    if index >= 0 and index < len(hotels):
        hotel = hotels[index]
        if hotel.cancel_booking(room_number):
            print(f"Бронювання кімнати {room_number} у готелі {hotel.name} успішно скасовано")
            return
        else:
            print(f"Кімната {room_number} у готелі {hotel.name} не була заброньована")
            return
    else:
        print(f"Готель з буквою {hotel_letter} не знайдено")

# Головна функція програми, яка запускає інтерактивний режим для користувача
def main():
    while True:
        print("Меню:")
        print("1. Перегляд списку готелів")
        print("2. Перегляд заброньованих кімнат")
        print("3. Вихід")
        action = input("Введіть номер дії: ")
        if action == '3':
            break
        elif action == '1':
            list_hotels()
            selected_hotel = input("Введіть букву готелю або 'q' для повернення до меню: ")
            if selected_hotel == 'q':
                continue
            if list_rooms(selected_hotel):
                sub_action = input("Введіть 'b' для бронювання кімнати, 'c' для скасування бронювання або 'q' для повернення до меню: ")
                if sub_action == 'q':
                    continue
                elif sub_action == 'b':
                    selected_room = input("Введіть номер кімнати для бронювання: ")
                    days = int(input("На скільки днів ви хочете забронювати кімнату? "))
                    book_room(selected_hotel, int(selected_room), days)
                elif sub_action == 'c':
                    selected_room = input("Введіть номер кімнати для скасування бронювання: ")
                    cancel_booking(selected_hotel, int(selected_room))
        elif action == '2':
            list_booked_rooms()
        print("====================")

if __name__ == "__main__":
    main()
